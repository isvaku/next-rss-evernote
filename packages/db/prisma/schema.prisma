// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

enum oauthStatus {
    PENDING_CREATION
    PENDING_RENEWAL
    AWAITING_CONFIRMATION
    ACTIVE
    ERROR
}

enum integrationType {
    EMPTY
    EVERNOTE
    NOTION
}

type Error {
    message String
}

type Evernote {
    oauthToken       String?
    oauthTokenSecret String?
    oauthStatus      oauthStatus @default(PENDING_CREATION)
    oauthError       Error[]
    expires          Int?        @db.Long
}

model Integrations {
    id       String          @id @default(auto()) @map("_id") @db.ObjectId
    evernote Evernote?
    userId   String
    rss      Rss[]
    type     integrationType @default(EMPTY)
    active   Boolean         @default(false)
}

model Rss {
    id                 String       @id @default(auto()) @map("_id") @db.ObjectId
    createdAt          DateTime     @default(now()) @db.Date
    updatedAt          DateTime     @updatedAt @db.Date
    url                String
    active             Boolean      @default(false)
    entries            Entries[]
    integration        Integrations @relation(fields: [integrationId], references: [id])
    integrationId      String       @db.ObjectId
    integrationDetails Json?
}

model Entries {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    createdAt DateTime @default(now()) @db.Date
    updatedAt DateTime @updatedAt @db.Date
    entryId   String
    title     String
    author    String
    content   String
    link      String
    created   Boolean
    entryDate DateTime
    error     Error[]
    rss       Rss      @relation(fields: [rssId], references: [id])
    rssId     String   @db.ObjectId
}

//model TEMPLATE {
//    id            String          @id @default(auto()) @map("_id") @db.ObjectId
//    createdAt     DateTime        @default(now())
//    updatedAt     DateTime        @updatedAt
//    otherDocument DocumentType    @relation(fields: [otherDocumentId], references: [id])
//}
